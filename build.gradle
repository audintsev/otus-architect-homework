plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.9.2'
    id 'java'
}

group = 'me.udintsev.otus.architect'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('testcontainersVersion', "1.14.3")
}

dependencies {
    implementation 'io.r2dbc:r2dbc-postgresql'
    implementation 'io.r2dbc:r2dbc-pool'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework:spring-r2dbc'
    implementation 'org.hibernate.validator:hibernate-validator'
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:r2dbc'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    // See https://asciidoctor.github.io/asciidoctor-gradle-plugin/maintenance-1.5/
    dependsOn test
    inputs.dir snippetsDir
}

bootJar {
    // See https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/html/
    dependsOn asciidoctor
    bootInf {
        from ("${asciidoctor.outputDir}/html5") {
            into 'classes/static/docs'
        }
    }
}
